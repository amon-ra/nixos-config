## Programs ##

super + alt + f
    firefox

super + alt + x
    keepassxc

super + alt + s
    signal-desktop

super + alt + t
    $DOTFILES/bin/bspwm/bspwm-toggle-visibility TelegramDesktop telegram-desktop

super + alt + d
    thunar

super + alt + l
    libreoffice

super + alt + e
    fractal

super + alt + c
    codium

super + alt + k
    kitty

super + alt + m
    kitty musikcube

super + alt + w
    kitty weechat

super + alt + a
    kitty aerc

super + Return
    kitty

# Open a disposable scratch buffer in a floating Emacs window, to run arbitrary
# code or quickly note something down.
super + shift + grave
	emacsclient --eval "(open-scratch-frame)"

# Invoke emacs-everywhere at point.
super + e
    emacsclient --eval "(emacs-everywhere)"

### Open all one-off terminal tools in floating xst window

super + alt + q
    xst -g 80x15

super + alt + v
    xst -g 80x15 pulsemixer

super + alt + j
    xst -g 80x15 -f JuliaMono-18 julia

super + alt + p
    xst -g 80x15 python

## Volume Control ##

super + alt + Return
	pulsemixer --toggle-mute && notify-send 'Muted/Unmuted'
	
crtl + alt + Up
	pulsemixer --change-volume -"10" --unmute && notify-send 'Raised Volume'
	
crtl + alt + Down
	pulsemixer --change-volume +"10" --unmute && notify-send 'Decreased Volume'

## Media Control ##

super + alt + space
	playerctl play-pause
	
super + alt + Right
	playerctl next
	
super + alt + Left
	playerctl previous

## Rofi ##

super + d
	$DOTFILES/bin/rofi/appmenu

super + Tab
	$DOTFILES/bin/rofi/windowmenu

super + 6
	$DOTFILES/bin/rofi/passmenu

super + 7
	$DOTFILES/bin/rofi/filemenu -x

super + 0
	$DOTFILES/bin/rofi/powermenu -x

## Node Controls ##

## Switch between preset keymaps
ctrl + super + space
    $DOTFILES/bin/keymapswitcher

## Toggle Polybar
super + z
    polybar-msg cmd toggle && bspc config -m primary top_padding 0

## Toggle window gap
super + g
    if [[ $(bspc config -d focused window_gap) -eq 150 ]]; then bspc config -d focused window_gap 20; else bspc config -d focused window_gap 150; fi

## Toggle focus follow for nodes
super + p
	bspc config focus_follows_pointer {false,true}

## Toggle Wacom device	
#super + w
#	wacom-toggle

## Rotate Wacom device	
#super + r
#	wacom-rotate

## Quit active node
super + {_,shift + }q
	bspc node -{c,k}

## Send active node to desktop on last used monitor and switch to it
ctrl + super + m
    bspc node -m last --follow

super + shift + m
    bspc node -n last.!automatic

## Send to desktop with number and follow
ctrl + super + {F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12}
    bspc node -d '^{1-12}' --follow

## Switch to desktop with number
super + {F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12}
    bspc desktop --focus '^{1-12}'

## Toggle fullscreen for active node
super + t
	bspc desktop -l next

## Toggle floating/tiling for active node
super + {_,ctrl + }f
	bspc node -t ~{floating,fullscreen}

## Change active node
super + {_,ctrl +}{h,j,k,l}
	$DOTFILES/bin/bspwm/focus {_,-m }{west,south,north,east}

## Swap nodes 
#super + shift + {_,ctrl +}{h,j,k,l}
#	$DOTFILES/bin/bspwm/swap {_,-m }{west,south,north,east}

#rotate
ctrl + super + {h,l}
    bspc node @/ -C {forward,backward}

super + alt + {F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12}
    bspc {desktop -f,node -d} {1-12};

## Open new node in preselected space
super + alt + {h,j,k,l}
	bspc node -p {west,south,north,east}

## Cancel resizing by preselection
super + alt + Delete
	bspc node -p cancel

# super + alt + Return
	# $DOTFILES/bin/bspwm/subtract-presel

# Expand a node by moving one of its side outward
super + {Left,Down,Up,Right}
	bspc node -z {left -40 0,bottom 0 40,top 0 -40,right 40 0}

# Contract a node by moving one of its side inward
super + ctrl + {Left,Down,Up,Right}
	bspc node -z {right -40 0,top 0 40,bottom 0 -40,left 40 0}

# Move a floating node
super + shift + {Left,Down,Up,Right}
	bspc node -v {-40 0,0 40,0 -40,40 0}

# Screenshot region
super + s
	scrcap

# ---- don't really get these ----

## Attach to a detached session. If none is available create a new one, rather
## than attach to one that is already attached to elsewhere.

# super + Escape
	# pkill -USR1 -x sxhkd

super + {_,shift +}{1-12}
	$DOTFILES/bin/bspwm/presel 0.{1-12}

super + a
	bspc window -s last

# # Screencast region to mp4
# super + c
	# scrrec -s ~/Pictures/Screenshots/$(date +%F-%T).mp4
	
# # Screencast region to gif
# super + g
	# scrrec -s ~/Videos/Screen\ Recordings/$(date +%F-%T).gif


#
## Media keys

# screenshot region
Print
	scrcap
# screencast region to mp4
super + Print
	scrrec -s ~/recordings/$(date +%F-%T).mp4
# screencast region to gif
super + ctrl + Print
	scrrec -s ~/recordings/$(date +%F-%T).gif

#XF86MonBrightnessUp
#	light -A 5
#XF86MonBrightnessDown
#	light -U 5

XF86AudioMute
	amixer -q set Master toggle
XF86AudioLowerVolume
	amixer -q set Master 10%- unmute
XF86AudioRaiseVolume
	amixer -q set Master 10%+ unmute

XF86Audio{Play,Pause}
	spt-send toggle
XF86AudioNext
	spt-send next
XF86AudioPrev
	spt-send prev

# X86Search

#
# mouse bindings
#

# Move or resize window
alt + button{1-3}
	bspc pointer -g {move,resize_side,resize_corner}

# Needed for ^^^^
alt + !button{1-3}
    bspc pointer -t %i %i


super + @button{1-3}
    bspc pointer -u
	
# Generate password
super + r ; g ; p
    tr -dc "a-zA-Z0-9_#@.-" < /dev/urandom | head -c 14 | xclip -selection clipboard

# Show clipmenu
super + v
    CM_LAUNCHER=rofi clipmenu \
        -location 1 \
        -m -3 \
        -no-show-icons \
        -theme-str '* \{ font: 10px; \}' \
        -theme-str 'listview \{ spacing: 0; \}' \
        -theme-str 'window \{ width: 20em; \}'

# Show help
super + slash
    sxhkd-help

# Reload sxhkdrc
super + shift + r
    pkill -usr1 -x sxhkd; notify-send 'sxhkd' 'Reloaded config'


#VDESKTOPS
ctrl + Super + {1-9}
	$DOTFILES/bin/bspwm/vdesktop '^{1-9}'
